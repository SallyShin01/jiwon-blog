{
  "hash": "6f70cd38ce51703539f1ea0dd337ca02",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Pandas string 개념정리\"\ndate : \"2025-03-11\"\nauthor: \"Jiwon Shin\"\ncategories: [news, code]\nimage: \"Pandas-logo.webp\"\n---\n\n\n## 날짜 및 문자형 변수 다루기\n\n### 날짜와 시간 다루기\n\n::: {#0fc586ef .cell execution_count=1}\n``` {.python .cell-code}\n# 예제 데이터\nimport numpy as np \nimport pandas as pd  \nimport warnings \nwarnings.filterwarnings(\"ignore\", category=pd.errors.SettingWithCopyWarning)\n\ndata = {\n    'date': ['2024-01-01 12:34:56', '2024-02-01 23:45:01', '2024-03-01 06:07:08'],\n    'value': [100, 201, 302]\n}\ndf = pd.DataFrame(data)\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3 entries, 0 to 2\nData columns (total 2 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   date    3 non-null      object\n 1   value   3 non-null      int64 \ndtypes: int64(1), object(1)\nmemory usage: 180.0+ bytes\n```\n:::\n:::\n\n\n#### 날짜 형식으로 변환\n\n::: {#df6aafb9 .cell execution_count=2}\n``` {.python .cell-code}\n# 문자열을 날짜 형식으로 변환\n# to_datetime() 활용하여 날짜 형식 변환\ndf['date'] = pd.to_datetime(df['date'])\nprint(df.dtypes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndate     datetime64[ns]\nvalue             int64\ndtype: object\n```\n:::\n:::\n\n\n#### 날짜 형식 변환시 주의사항\n\n::: {#1d062b8b .cell execution_count=3}\n``` {.python .cell-code}\n# 올바른 형식\npd.to_datetime('03-11-2025')\npd.to_datetime('2025-03-11')\npd.to_datetime('2025/03/11')\npd.to_datetime('03/11/2025')\n\n# pd.to_datetime('11/2024/03') 입력형식이 맞지 않음\npd.to_datetime('11-2025-03', format='%d-%Y-%m')\npd.to_datetime('11-25-03', format='%d-%y-%m')\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nTimestamp('2025-03-11 00:00:00')\n```\n:::\n:::\n\n\n#### 날짜 정보 추출\n\n::: {#86e982e7 .cell execution_count=4}\n``` {.python .cell-code}\ndt_obj = pd.to_datetime('2025년 03월 11일',\n                        format='%Y년 %m월 %d일')\ndt_obj.year\ndt_obj.month\ndt_obj.day\ndt_obj.day_name()\ndt_obj.weekday()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n1\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}